name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25.1"

      - name: Get dependencies
        run: go mod download

      - name: Format check
        run: |
          fmt=$(gofmt -l .)
          if [ -n "$fmt" ]; then
            echo "Go files are not formatted:"
            echo "$fmt"
            exit 1
          fi

      - name: Vet
        run: go vet ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

      - name: Test
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.txt
          fail_ci_if_error: false

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25.1"

      - name: Get dependencies
        run: go mod download

      - name: Run benchmarks
        run: go test -bench=. -benchmem ./...

  c-compatibility:
    name: C Compatibility
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25.1"

      - name: Get dependencies
        run: go mod download

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc

      - name: Verify C compatibility
        run: make verify-c-compat
